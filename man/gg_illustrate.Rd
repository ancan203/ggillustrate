% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_illustrate.R
\name{gg_illustrate}
\alias{gg_illustrate}
\title{Transform a ggplot2 Chart into an Artistic Illustration via OpenAI}
\usage{
gg_illustrate(
  plot,
  themes,
  out_path = "ai_illustration.png",
  size = "1024x1024",
  openai_api_key = NULL
)
}
\arguments{
\item{plot}{(\code{ggplot})\cr
A \code{ggplot2} object to be transformed.}

\item{themes}{(\code{character(1)})\cr
A comma-separated string of visual themes or keywords (e.g., "watercolor, minimal, geometric").
These themes guide the artistic style of the final image.}

\item{out_path}{(\code{character(1)})\cr
Local file path where the AI-generated PNG will be saved. Defaults to "ai_illustration.png".}

\item{size}{(\code{character(1)})\cr
Requested size for the output PNG (e.g., "1024x1024", "512x512", "256x256").
Must match OpenAI's supported image sizes.}

\item{openai_api_key}{(\code{character(1)})\cr
Optional. Explicit OpenAI API key to use. If \code{NULL}, the function tries to read
from the environment variable \env{OPENAI_API_KEY}.}
}
\value{
Invisibly returns the path to the saved illustration (\code{out_path}).
Throws an error if the OpenAI API key is missing or the API call fails.
}
\description{
Given a \code{ggplot2} plot and a set of visual themes, \code{gg_illustrate()} sends the
saved plot to the OpenAI Image Editing endpoint. The function requests an AI-generated
illustration that preserves the original data structure, legends, labels, and relationships,
while applying aesthetic enhancements inspired by the specified themes.
}
\details{
\enumerate{
\item The function temporarily saves the input \code{ggplot2} object as a PNG (300 DPI, 6"x4").
\item It constructs a prompt that requests the AI to keep the data, legends, and labels unchanged
while blending in the user-defined visual themes.
\item It calls OpenAI's \code{/v1/images/edits} endpoint, specifying \code{model = "gpt-image-1"}.
\item On success (HTTP 200), the returned base64-encoded PNG is decoded and written to \code{out_path}.
}
}
\examples{
\dontrun{
library(ggplot2)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
gg_illustrate(
  plot = p,
  themes = "watercolor, minimal, pastel",
  out_path = "mtcars_artistic.png",
  size = "512x512"
)
}

}
